name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          pip install pytest pytest-cov

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install frontend deps
        if: hashFiles('frontend/package.json') != ''
        working-directory: frontend
        run: npm ci

      - name: Check for frontend tests
        id: frontend-tests
        if: hashFiles('frontend/package.json') != ''
        working-directory: frontend
        run: |
          if npm run | grep -qE ' test '; then
            echo "has_test=true" >> "$GITHUB_OUTPUT"
          else
            echo "has_test=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Run frontend tests
        if: steps.frontend-tests.outputs.has_test == 'true'
        working-directory: frontend
        run: npm test

      - name: Run backend tests
        run: |
          pytest --cov=backend --cov-report=term-missing -q

      - name: Validate OpenAPI schema
        run: |
          if [ -f backend/scripts/generate_openapi.py ]; then
            python backend/scripts/generate_openapi.py
            if [ -f openapi.json ]; then
              python -m json.tool openapi.json > /dev/null
            fi
          fi

